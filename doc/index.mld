{0 Over The Type}

Over The Type explores the confines of OCaml's powerful
type system with a logician mind influenced by dependently-
typed programming languages and proof assistants.
    
{b It is a work in progress so expect more soon!}

{1 Modules}

{2 Datatypes}

- {{!Over_the_type.Bool}[Bool]}
- {{!Over_the_type.Unit}[Unit]}

{2 Logic}

- {{!Over_the_type.False}[False]}
- {{!Over_the_type.True}[True]}
- {{!Over_the_type.Not}[Not]}
- {{!Over_the_type.And}[And]}
- {{!Over_the_type.Or}[Or]}
- {{!Over_the_type.Eq}[Eq]}
- {{!Over_the_type.Neq}[Neq]}

{3 Classical}

- {{!Over_the_type.Classical.Tactic}[Tactic]}
- {{!Over_the_type.Classical.Law}[Law]}
